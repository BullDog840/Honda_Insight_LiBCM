Init(); //runs once after each reset
	-get SoC from EEPROM
	-init_everything()
	-configure watchdog

Scheduler Tasks:

-keyStateChange handler
	-If keyState=on
		-sets updateVPIN to run
		-LED1 on
		-Set gridChargerTask to stop
		-

	-If keyState=off
		-sets startupVPIN to stop
		-LED1 off
		-Set gridChargerTask to run
	

-updateVPIN

-getCurrentOversample
	-every 64th oversample becomes a filtered sample.
		-Ideally we want to create one sample per second, for easier charge counts (J/s)
			-After we've created a sample, we just park this thread until coulombCount runs.
		-Sets coulombCount to run state

-coulombCount
	-Runs once per second
	Subtract "zero amp" ADC constant
	Accumulate with latest sample.
	32b allows full assist for 18 hours without overflowing when sampled once per second.

-LTC6804 ADC convert
	-Send ADC convert broadcast command
	-start timer for LTC6804 retrieve voltage

-LTC6804 retrieve voltage
	-When complete IC's data received, verify CRC

-checkCellVoltage
	-Compares cell voltages to max/min

-Check Temperature

-ReadMETSCI

-FormBATTSCI

-Save SoC(RAM) to EEPROM
	-If value in RAM is more than 10% different from EEPROM value, update EEPROM.
	-Also store if key recently turned off (keyState_previous == on && keyState_now == off)
	-EEPROM writes require 3.3. ms blocking time (interrupts must be disabled)
		-Example EEPROM code p24 MEGA2560 manual


-Check for Serial Data from user

-Turn off LiBCM (future feature)
	-If keyoff for 60 minutes

-Feed Watchdog